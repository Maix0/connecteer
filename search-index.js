var searchIndex = JSON.parse('{\
"capabilities_test1":{"doc":"","t":"FF","n":["main","test"],"q":[[0,"capabilities_test1"]],"d":["",""],"i":[0,0],"f":[[[]],[[]]],"c":[],"p":[]},\
"connecteer_capabilities":{"doc":"","t":"CIQQQIQQDQQQQQQQQQMOMAKKMAKKAOAAKAKKKIQQQQQQQKKDDLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLWWQQIQIQQQQKKKKKKOODDMMLLLLMMLMMLLLMLLLLLLLLLLLLDIILLLLLLL","n":["Base","Connection","Ctx","Ctx","Message","Middleware","Next","NextError","Pipeline","ReceiveError","ReceiveGen","SendError","SendGen","UnwrapError","UnwrapGen","WrapError","WrapGen","Wrapped","_marker","between_yields_lifetime","con","connection","create_unwrap_error","create_wrap_error","ctx","gen_utils","get_next","get_next_ctx","identity","iter_generator","middleware","pipeline","receive","sealed","send","unwrap","wrap","Connection","Ctx","NextError","ReceiveError","ReceiveGen","SendError","SendGen","Wrapped","receive","send","BetweenYields","UnsafeHigherRankGenerator","adjust","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","new","resume","try_from","try_from","try_into","try_into","type_id","type_id","Base","Identity","SingleGen","Wrapper","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","create_unwrap_error","create_wrap_error","deserialize","from","from","from","from","get_next","get_next_ctx","into","into","into","into","into_inner","receive","receive","resume","send","send","serialize","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrap","wrap","","","Ctx","Message","Middleware","Next","PublicUncallable","UnwrapError","UnwrapGen","WrapError","WrapGen","create_unwrap_error","create_wrap_error","get_next","get_next_ctx","unwrap","wrap","yield_","yield_","Pipeline","StructGen","_marker","_pin","borrow","borrow","borrow_mut","borrow_mut","con","con","ctx","ctx","ctx","ctx_mut","from","from","gen","into","into","new","receive","resume","send","try_from","try_from","try_into","try_into","type_id","type_id","PublicUncallable","PublicUncallableSealed","Sealed","borrow","borrow_mut","from","into","try_from","try_into","type_id"],"q":[[0,"connecteer_capabilities"],[37,"connecteer_capabilities::connection"],[47,"connecteer_capabilities::gen_utils"],[66,"connecteer_capabilities::identity"],[112,"connecteer_capabilities::middleware"],[131,"connecteer_capabilities::pipeline"],[160,"connecteer_capabilities::sealed"]],"d":["","You can’t implement this trait, you need to let the …","","","This is the message type that is outputted by the …","","","","This is the only way to actually pass a message through …","","","","","The error type returned when unwrapping an <code>Message</code> and …","","The error type returned when wrapping an <code>Message</code>","","","","","","","This function allows the system to create an error when …","This function allows the system to bubble-up an error when …","","","","","","","","","","","","Transform an <code>Payload</code> into a Wrapped <code>Message</code>","Transform an <code>Message</code> into a Unwrapped <code>Payload</code>","You can’t implement this trait, you need to let the …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","This is the “Base” of all <code>Middleware</code> chain. This is …","","","This type can be used when implementing an Middleware that …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","This is the message type that is outputted by the …","","","This is a trait that prevent an “outsider” to call …","The error type returned when unwrapping an <code>Message</code> and …","","The error type returned when wrapping an <code>Message</code>","","This function allows the system to create an error when …","This function allows the system to bubble-up an error when …","","","Transform an <code>Payload</code> into a Wrapped <code>Message</code>","Transform an <code>Message</code> into a Unwrapped <code>Payload</code>","","","This is the only way to actually pass a message through …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","",""],"i":[0,0,19,23,23,0,23,19,0,19,19,19,19,23,23,23,23,19,21,0,21,0,23,23,21,0,23,23,0,0,0,0,19,0,19,23,23,0,19,19,19,19,19,19,19,19,19,0,0,2,5,2,5,2,5,2,5,2,5,5,5,2,5,2,5,2,0,0,0,0,14,15,24,10,14,15,24,10,10,10,14,14,15,24,10,10,10,14,15,24,10,14,24,10,15,24,10,14,14,15,24,10,14,15,24,10,14,15,24,10,10,10,0,0,23,23,0,23,0,23,23,23,23,23,23,23,23,23,23,0,0,0,0,21,22,22,21,22,21,22,21,21,22,21,21,22,21,22,22,21,21,21,22,21,22,21,22,21,22,21,0,0,0,1,1,1,1,1,1,1],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,0,[[]],[[]],0,0,0,0,[1],0,[1],[[]],[[]],0,0,0,0,0,0,0,0,[1],[1],0,0,[[2,3],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,[[5,[4]]]],[[[6,[[5,[4]]]]],7],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[10,11]],[[10,11]],[12,[[8,[[14,[13]]]]]],[[]],[[]],[[]],[[]],[10],[[]],[[]],[[]],[[]],[[]],[14],[1],[1],[[[6,[15]]],7],[[[14,[[0,[16,17]]]],1]],[1],[[[14,[16]],18],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[]],[[[0,[17,16]]]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[[[21,[[0,[[19,[[0,[16,17]]]],20]],[0,[16,17]]]]]],0,0,[[[21,[[0,[[19,[[0,[16,17]]]],20]],[0,[16,17]]]]]],[[]],[[]],0,[[]],[[]],[[[0,[[19,[[0,[16,17]]]],20]]],[[21,[[0,[[19,[[0,[16,17]]]],20]],[0,[16,17]]]]]],[[[21,[[0,[[19,[[0,[16,17]]]],20]],[0,[16,17]]]]],4],[[[6,[[22,[4,20,20]]]]],7],[[[21,[[0,[[19,[[0,[16,17]]]],20]],[0,[16,17]]]],[0,[16,17]]],4],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],0,0,0,[[]],[[]],[[]],[[]],[[],8],[[],8],[[],9]],"c":[],"p":[[3,"PublicUncallable"],[3,"BetweenYields"],[8,"Sized"],[8,"Generator"],[3,"UnsafeHigherRankGenerator"],[3,"Pin"],[4,"GeneratorState"],[4,"Result"],[3,"TypeId"],[3,"Base"],[4,"Infallible"],[8,"Deserializer"],[8,"Deserialize"],[3,"Wrapper"],[3,"SingleGen"],[8,"Serialize"],[8,"DeserializeOwned"],[8,"Serializer"],[8,"Connection"],[8,"Unpin"],[3,"Pipeline"],[3,"StructGen"],[8,"Middleware"],[3,"Identity"]]},\
"connecteer_translation":{"doc":"","t":"DRLLAMMMCLLLAMLLMMMLLLLLIDQDMMKKKMMKADDLLLLLMMLLLLLLLMLLMLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLL","n":["Connection","DEFAULT_BUFFER_SIZE","borrow","borrow_mut","buffer","buffer","buffer_factory","buffer_marker","embedded_io","feed_bytes","from","into","io","message_marker","new","new_alloc","protocol_de_factory","protocol_marker","protocol_ser_factory","serialize","try_deserialize","try_from","try_into","type_id","Buffer","BufferRead","Reader","RingBuffer","bytes_read","current_bytes_read","discard_read_bytes","feed_bytes","get_read","inner","iter","keep_read_bytes","with_std","BufferRead","RingBuffer","as_read","borrow","borrow","borrow_mut","borrow_mut","bytes_read","current_bytes_read","discard_read_bytes","discard_read_bytes","feed_bytes","feed_bytes","from","from","get_read","inner","into","into","iter","keep_read_bytes","new","read","reset_read_bytes","try_from","try_from","try_into","try_into","type_id","type_id","PanicOnDrop","SignalDrop","borrow","borrow","borrow_mut","borrow_mut","drop","drop","flush","from","from","into","into","read","read_exact","run_with_val","try_from","try_from","try_into","try_into","type_id","type_id","write","write_all","write_fmt"],"q":[[0,"connecteer_translation"],[24,"connecteer_translation::buffer"],[37,"connecteer_translation::buffer::with_std"],[67,"connecteer_translation::io"]],"d":["","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Discard every bytes that were read from an <code>Self::Reader</code>","Feed bytes into the Buffer The return value is the number …","Get a Reader into the Buffer This reader needs to NOT …","","","Keep the bytes that were read into the buffer, allowing …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","This type is meant to represent a type that Needs to be …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"i":[0,0,6,6,0,6,6,6,0,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,0,0,2,0,15,10,2,2,2,10,15,2,0,0,0,10,10,15,10,15,15,10,10,10,10,10,10,15,10,10,10,15,15,10,10,15,10,10,15,10,15,10,15,0,0,17,18,17,18,17,18,17,17,18,17,18,17,17,17,17,18,17,18,17,18,17,17,17],"f":[0,0,[[]],[[]],0,0,0,0,0,[[[6,[1,1,2,1,3,[0,[4,5]]]],[8,[7]]],9],[[]],[[]],0,0,[[1,1,1,2],[[6,[1,1,2,1,3,[0,[4,5]]]]]],[[1,1],[[6,[1,1,10,[11,[7]],12,[0,[4,5]]]]]],0,0,0,[[[6,[1,1,2,1,3,[0,[4,5]]]],[0,[4,5]]],[[13,[3]]]],[[[6,[1,1,2,1,3,[0,[4,5]]]]],[[13,[[0,[4,5]]]]]],[[],13],[[],13],[[],14],0,0,0,0,0,0,[[]],[[[8,[7]]],9],[[]],0,0,[[]],0,0,0,[10,15],[[]],[[]],[[]],[[]],0,0,[10],[10],[[10,[8,[7]]],9],[[10,[8,[7]]]],[[]],[[]],[10],0,[[]],[[]],0,[10],[9,10],[[15,[8,[7]]],[[13,[9]]]],[10],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],0,0,[[]],[[]],[[]],[[]],[[[17,[16]]]],[18],[[[17,[3]]],[[13,[19]]]],[[]],[[]],[[]],[[]],[[[17,[20]],[8,[7]]],[[13,[9]]]],[[[17,[20]],[8,[7]]],[[13,[21]]]],[[16,22]],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[[17,[3]],[8,[7]]],[[13,[9,19]]]],[[[17,[3]],[8,[7]]],[[13,[19]]]],[[[17,[3]],23],[[13,[[24,[19]]]]]]],"c":[],"p":[[8,"FnMut"],[8,"Buffer"],[8,"Write"],[8,"Serialize"],[8,"DeserializeOwned"],[3,"Connection"],[15,"u8"],[15,"slice"],[15,"usize"],[3,"RingBuffer"],[3,"Vec"],[4,"Infallible"],[4,"Result"],[3,"TypeId"],[3,"BufferRead"],[8,"Sized"],[3,"SignalDrop"],[3,"PanicOnDrop"],[8,"Error"],[8,"Read"],[4,"ReadExactError"],[8,"FnOnce"],[3,"Arguments"],[4,"WriteFmtError"]]},\
"json_messages":{"doc":"","t":"F","n":["main"],"q":[[0,"json_messages"]],"d":[""],"i":[0],"f":[[[]]],"c":[],"p":[]},\
"rmp_messages":{"doc":"","t":"DMMLLLLLLLMLLFLLLLL","n":["Something","bar","baz","borrow","borrow_mut","clone","clone_into","deserialize","eq","fmt","foo","from","into","main","serialize","to_owned","try_from","try_into","type_id"],"q":[[0,"rmp_messages"]],"d":["","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1],"f":[0,0,0,[[]],[[]],[1,1],[[]],[2,[[3,[1]]]],[[1,1],4],[[1,5],6],0,[[]],[[]],[[]],[[1,7],3],[[]],[[],3],[[],3],[[],8]],"c":[],"p":[[3,"Something"],[8,"Deserializer"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Serializer"],[3,"TypeId"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
